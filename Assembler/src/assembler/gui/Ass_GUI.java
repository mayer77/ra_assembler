/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assembler.gui;

import assembler.grenz.CodeGrenz;
import assembler.io.ICRUD_IO;
import assembler.io.ICRUD_IOImpl;
import assembler.logic.IConverter;
import assembler.logic.IConverterImpl;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Phillip Braun
 * @author Maximilian Mayer
 */
public class Ass_GUI extends javax.swing.JFrame
{

    //Verwendete Klassen
    static ICRUD_IO io;
    static IConverter converter;

    //Gobale Variablen
    private CodeGrenz codeGrenz;
    private String fileString = "";

    /**
     * Creates new form Ass_GUI
     */
    public Ass_GUI()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        gen_Sim_btn = new javax.swing.JButton();
        read_File_btn = new javax.swing.JButton();
        gen_Mem_btn = new javax.swing.JButton();
        save_Code_btn = new javax.swing.JButton();
        message_lbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);
        jTextArea1.getAccessibleContext().setAccessibleName("textField");

        gen_Sim_btn.setText("Simfile erzeugen");

        read_File_btn.setText("File einlesen");
        read_File_btn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                read_File_btnActionPerformed(evt);
            }
        });

        gen_Mem_btn.setText("Memfile erzeugen");
        gen_Mem_btn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                gen_Mem_btnActionPerformed(evt);
            }
        });

        save_Code_btn.setText("Code abspeichern");
        save_Code_btn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                save_Code_btnActionPerformed(evt);
            }
        });

        message_lbl.setText("Bereit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(message_lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE)
                        .addComponent(save_Code_btn)
                        .addGap(18, 18, 18)
                        .addComponent(gen_Mem_btn)
                        .addGap(18, 18, 18)
                        .addComponent(gen_Sim_btn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(read_File_btn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(read_File_btn)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gen_Sim_btn)
                    .addComponent(gen_Mem_btn)
                    .addComponent(save_Code_btn)
                    .addComponent(message_lbl))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void read_File_btnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_read_File_btnActionPerformed
    {//GEN-HEADEREND:event_read_File_btnActionPerformed
        try
        {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
            fileChooser.setFileFilter(new FileNameExtensionFilter("Text files", "txt"));
            fileChooser.setAcceptAllFileFilterUsed(false);
            int result = fileChooser.showOpenDialog(this);

            if (result == JFileChooser.APPROVE_OPTION)
            {
                
                codeGrenz = io.loadCode(fileChooser.getSelectedFile());
                if (codeGrenz == null || codeGrenz.getCtxt() == null || codeGrenz.getError() != null)
                {
                    message_lbl.setText("Code konnte nicht eingelsen werden! Error: ");
                } else
                {
                    jTextArea1.setText("");
                    for (String line : codeGrenz.getCtxt())
                    {
                        jTextArea1.append(line);
                        jTextArea1.append("\n");
                    }
                }
                message_lbl.setText("Code geladen.");
            }
        } catch (Exception e) 
        {
            message_lbl.setText("Code konnte nicht geladen werden.");
        }
    }//GEN-LAST:event_read_File_btnActionPerformed

    private void save_Code_btnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_save_Code_btnActionPerformed
    {//GEN-HEADEREND:event_save_Code_btnActionPerformed
        try
        {
            if (codeGrenz == null)
            {
                message_lbl.setText("Code konnte nicht abgespeichert werden! Kein Code vorhanden.");
            } else
            {

                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
                fileChooser.setFileFilter(new FileNameExtensionFilter("Text files", "txt"));
                fileChooser.setDialogType(JFileChooser.SAVE_DIALOG);
                int result = fileChooser.showSaveDialog(this);

                if (result == JFileChooser.APPROVE_OPTION)
                {

                    int errorNr = io.saveCode(codeGrenz, fileChooser.getSelectedFile());
                    if (errorNr == 0)
                    {
                        message_lbl.setText("Code abgespeichert!");
                    } else
                    {
                        message_lbl.setText("Code konnte nicht abgespeichert werden! Error: " + errorNr);
                    }
                }
            }
        } catch (Exception e)
        {
            message_lbl.setText("Code konnte nicht abgespeichert werden.");
        }
    }//GEN-LAST:event_save_Code_btnActionPerformed

    private void gen_Mem_btnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_gen_Mem_btnActionPerformed
    {//GEN-HEADEREND:event_gen_Mem_btnActionPerformed
        try
        {
            fileString = jTextArea1.getText();
            String[] sa = fileString.split("\n");

            setCodeGrenz();
            codeGrenz.setCtxt(new ArrayList<>());
            for (String s : sa)
            {
                codeGrenz.getCtxt().add(s);
            }
            codeGrenz = converter.convert(codeGrenz);
            if (codeGrenz == null || !(codeGrenz.getError() == null))
            {
                int error = codeGrenz.getError();
                message_lbl.setText("Error in Zeile: " + error);
                //System.out.println("Error in code Grenz");
            }

            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
            fileChooser.setFileFilter(new FileNameExtensionFilter("Mem File", "mem"));
            fileChooser.setDialogType(JFileChooser.SAVE_DIALOG);
            int result = fileChooser.showSaveDialog(this);

            if (result == JFileChooser.APPROVE_OPTION)
            {
                io.exportCode(codeGrenz, fileChooser.getSelectedFile());
            }
        } 
        catch (Exception e)
        {
            message_lbl.setText("Fehler! MIF-File konnte nicht erstellt werden.");
        }
    }//GEN-LAST:event_gen_Mem_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */

        //Klassen initialisieren
        io = new ICRUD_IOImpl();
        converter = new IConverterImpl();

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Ass_GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Ass_GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Ass_GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Ass_GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Ass_GUI().setVisible(true);
            }
        });
    }

    private void setCodeGrenz()
    {
        if (codeGrenz == null)
        {
            codeGrenz = new CodeGrenz(null, null, null, null);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton gen_Mem_btn;
    private javax.swing.JButton gen_Sim_btn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel message_lbl;
    private javax.swing.JButton read_File_btn;
    private javax.swing.JButton save_Code_btn;
    // End of variables declaration//GEN-END:variables
}
